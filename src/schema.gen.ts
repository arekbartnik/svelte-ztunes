/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by drizzle-zero.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { Row } from "@rocicorp/zero";
import { createBuilder } from "@rocicorp/zero";
import type { CustomType } from "drizzle-zero";
import type * as drizzleSchema from "./lib/server/db/schema";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    account: {
      name: "account",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "id"
          >,
        },
        accountId: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "accountId"
          >,
          serverName: "account_id",
        },
        providerId: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "providerId"
          >,
          serverName: "provider_id",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "userId"
          >,
          serverName: "user_id",
        },
        accessToken: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "accessToken"
          >,
          serverName: "access_token",
        },
        refreshToken: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "refreshToken"
          >,
          serverName: "refresh_token",
        },
        idToken: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "idToken"
          >,
          serverName: "id_token",
        },
        accessTokenExpiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "accessTokenExpiresAt"
          >,
          serverName: "access_token_expires_at",
        },
        refreshTokenExpiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "refreshTokenExpiresAt"
          >,
          serverName: "refresh_token_expires_at",
        },
        scope: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "scope"
          >,
        },
        password: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "password"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "account",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    album: {
      name: "album",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "album",
            "id"
          >,
        },
        artistId: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "album",
            "artistId"
          >,
          serverName: "artist_id",
        },
        title: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "album",
            "title"
          >,
        },
        year: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "album",
            "year"
          >,
        },
      },
      primaryKey: ["id"],
    },
    artist: {
      name: "artist",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "artist",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "artist",
            "name"
          >,
        },
        sortName: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "artist",
            "sortName"
          >,
          serverName: "sort_name",
        },
        type: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "artist",
            "type"
          >,
        },
        beginDate: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "artist",
            "beginDate"
          >,
          serverName: "begin_date",
        },
        endDate: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "artist",
            "endDate"
          >,
          serverName: "end_date",
        },
        popularity: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "artist",
            "popularity"
          >,
        },
      },
      primaryKey: ["id"],
    },
    cartItem: {
      name: "cartItem",
      columns: {
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "cartItem",
            "userId"
          >,
          serverName: "user_id",
        },
        albumId: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "cartItem",
            "albumId"
          >,
          serverName: "album_id",
        },
        addedAt: {
          type: "number",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "cartItem",
            "addedAt"
          >,
          serverName: "added_at",
        },
      },
      primaryKey: ["userId", "albumId"],
      serverName: "cart_item",
    },
    session: {
      name: "session",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "session",
            "id"
          >,
        },
        expiresAt: {
          type: "number",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "session",
            "expiresAt"
          >,
          serverName: "expires_at",
        },
        token: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "session",
            "token"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "session",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "session",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
        ipAddress: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "session",
            "ipAddress"
          >,
          serverName: "ip_address",
        },
        userAgent: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "session",
            "userAgent"
          >,
          serverName: "user_agent",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "session",
            "userId"
          >,
          serverName: "user_id",
        },
      },
      primaryKey: ["id"],
    },
    user: {
      name: "user",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "user",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "user",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "user",
            "email"
          >,
        },
        emailVerified: {
          type: "boolean",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "user",
            "emailVerified"
          >,
          serverName: "email_verified",
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "user",
            "image"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "user",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "user",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    verification: {
      name: "verification",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "verification",
            "id"
          >,
        },
        identifier: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "verification",
            "identifier"
          >,
        },
        value: {
          type: "string",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "verification",
            "value"
          >,
        },
        expiresAt: {
          type: "number",
          optional: false,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "verification",
            "expiresAt"
          >,
          serverName: "expires_at",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "verification",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as CustomType<
            typeof drizzleSchema,
            "verification",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
  },
  relationships: {
    album: {
      artist: [
        {
          sourceField: ["artistId"],
          destField: ["id"],
          destSchema: "artist",
          cardinality: "one",
        },
      ],
      cartItems: [
        {
          sourceField: ["id"],
          destField: ["albumId"],
          destSchema: "cartItem",
          cardinality: "many",
        },
      ],
    },
    artist: {
      albums: [
        {
          sourceField: ["id"],
          destField: ["artistId"],
          destSchema: "album",
          cardinality: "many",
        },
      ],
    },
    cartItem: {
      album: [
        {
          sourceField: ["albumId"],
          destField: ["id"],
          destSchema: "album",
          cardinality: "one",
        },
      ],
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "user",
          cardinality: "one",
        },
      ],
    },
    user: {
      cartItems: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "cartItem",
          cardinality: "many",
        },
      ],
    },
  },
  enableLegacyQueries: true,
  enableLegacyMutators: true,
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
/**
 * Represents a row from the "account" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Account = Row<Schema["tables"]["account"]>;
/**
 * Represents a row from the "album" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Album = Row<Schema["tables"]["album"]>;
/**
 * Represents a row from the "artist" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Artist = Row<Schema["tables"]["artist"]>;
/**
 * Represents a row from the "cartItem" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type CartItem = Row<Schema["tables"]["cartItem"]>;
/**
 * Represents a row from the "session" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Session = Row<Schema["tables"]["session"]>;
/**
 * Represents a row from the "user" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type User = Row<Schema["tables"]["user"]>;
/**
 * Represents a row from the "verification" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Verification = Row<Schema["tables"]["verification"]>;

/**
 * Represents the Zero schema query builder.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const builder = createBuilder(schema);
